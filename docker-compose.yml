services:
  ms-web-service:
    image: base-microservices
    build: ./microservices
    container_name: ms-web-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=web-service
      - KAFKA_BROKERS=kafka:9092 
      - KAFKA_LOG_TOPIC=logs    

  ms-auth-service:
    image: base-microservices
    container_name: ms-auth-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=auth-service
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_LOG_TOPIC=logs
  ms-user-service:
    image: base-microservices
    container_name: ms-user-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=user-service
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_LOG_TOPIC=logs

  ms-order-service:
    image: base-microservices
    container_name: ms-order-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=order-service
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_LOG_TOPIC=logs

  ms-inventory-service:
    image: base-microservices
    container_name: ms-inventory-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=inventory-service
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_LOG_TOPIC=logs

  ms-payment-service:  
    image: base-microservices
    container_name: ms-payment-service
    depends_on:
      - kafka
    environment:
      - SERVICE_NAME=payment-service
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_LOG_TOPIC=logs


  logstash:
     image: docker.elastic.co/logstash/logstash:7.17.2
     container_name: logstash
     ports:
       - "5044:5044"
     volumes:
       - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
     depends_on:
       - kafka
       - elasticsearch

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
      container_name: elasticsearch
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - ES_JAVA_OPTS=-Xms1g -Xmx1g
      ulimits:
        memlock:
          soft: -1
          hard: -1  
  kibana:
     image: docker.elastic.co/kibana/kibana:7.17.2
     container_name: kibana
     ports:
       - "5601:5601"
     environment:
        ELASTICSEARCH_HOSTS: http://elasticsearch:9200        
     depends_on:
       - elasticsearch   

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Listener settings
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # Cluster settings
      - KAFKA_KRAFT_CLUSTER_ID=CLUSTER_ID_1
      - KAFKA_CFG_CREATE_TOPICS=logs:10:1      
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=localCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka      

